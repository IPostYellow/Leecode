/*19. 删除链表的倒数第N个节点
给定一个链表，删除链表的倒数第 n 个节点，并且返回链表的头结点。

示例：

给定一个链表: 1->2->3->4->5, 和 n = 2.

当删除了倒数第二个节点后，链表变为 1->2->3->5.
说明：

给定的 n 保证是有效的。

进阶：

你能尝试使用一趟扫描实现吗？*/
//执行用时：0 ms, 在所有 Java 提交中击败了100.00%的用户
//内存消耗：36.4 MB, 在所有 Java 提交中击败了99.64%的用户
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head == null||(head.next == null&&n == 1)){
            return null;
        }
        ListNode p = head;
        ListNode pro = head;
        int count = n;

        while(count>0){
            if(pro.next!=null){
                pro = pro.next;
                count--;
            }else{
                return head.next;
            }
           
        }
        while(pro.next!=null){
            p = p.next;
            pro = pro.next;
        }
        p.next = p.next.next;
        return head;
    }
}
